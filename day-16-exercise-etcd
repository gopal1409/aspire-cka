take the back of etcd in /etc/data/etcd-snapshot.db
  1. CA Certificate: /opt/kuin00601/ca.crt
  2. client certificate: /opt/kuin00601/etcd-client.crt
  3. client key: /opt/kuin00601/etcd-client.key
######write downt the script to take the backup
    then restore the backup from a previous snapshot located as /var/lib/backup/etcd-snapshot-previous.db
####solution
ETCDCTL_API=3 etcdctl --endpoints=https://[127.0.0.1]:2379 --cacert=/opt/kuin00601/ca.crt --cert=/opt/kuin00601/etcd-client.crt --key=/opt/kuin00601/etcd-client.key  snapshot save /etc/data/etcd-snapshot.db

ETCDCTL_API=3 etcdctl --endpoints=https://[127.0.0.1]:2379 --cacert=/opt/kuin00601/ca.crt --cert=/opt/kuin00601/etcd-client.crt --key=/opt/kuin00601/etcd-client.key  snapshot restore /var/lib/backup/etcd-snapshot-previous.db

###schedule a pod as follows 
name: kucc1
app container: 2
container name/images
1. nginx
2. httpd
 1109  kubectl run kucc1 --image=nginx --dry-run=client -o yaml > aa.yml
 1110  vi aa.yml
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: kucc1
  name: kucc1
spec:
  containers:
  - image: nginx
    name: nginx
  - image: httpd
    name: httpd
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}
####scale the deployment webserver to 3 pods
 1125  kubectl create deployment web --image=nginx
 1126  kubectl get deploy
####3kubectl get deploy will show you once web server is already running
kubectl scale deploy web --replicas=3
