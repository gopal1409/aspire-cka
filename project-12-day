lets create login id in gitlab and dockerhub. 
##lets upload the code in gitlab. 
 534  cd /root
  535  git clone https://github.com/gopal1409/spring-chat-app-aspire.git
  536  cd spring-chat-app-aspire/
  537  git config --global user.name "gopal"
  538  git config --global user.email "gopal1409@gmail.com"
rm -rf .git  
539  git init
  540  git add .
  541  git commit -m "springapp"
  542  git log
  543  ssh-keygen -t rsa
  544  cat /root/.ssh/id_rsa.pub
  ###once you got the keypair
####create a new repo and upload the code inside the repo
###add the remote repo you got it from gitlab
  553  git remote add origin git@gitlab.com:gopal1409/spring-chat-app-aspire.git
###then push your code 
  554  git push origin master
###how to install helm
 261  wget https://get.helm.sh/helm-v3.13.1-linux-amd64.tar.gz
  262  tar zxvf helm-v3.13.1-linux-amd64.tar.gz
  263  cd linux-amd64/
  264  ls
  265  cp helm /usr/bin

####using helm install gitlab runner
 558  helm repo add gitlab https://charts.gitlab.io
  559  helm repo update gitlab
  560  helm search repo -l gitlab/gitlab-runner
#####we need to conigure the same for kubernetes
##copy the values.yml
https://github.com/gopal1409/gitlab-value.yml/blob/main/values.yml

####create file
values.yml
##########
inside that file find runnerRegistrationToken
###finally we will install the runner with values.yml file
helm install --namespace default gitlab-runner -f values.yml gitlab/gitlab-runner
kubectl get pod
 kubectl logs gitlab-runner-7c557bb44d-6hbxq
kubectl get sa -A
###in gitlab add the varaibles
CI_REGISTRY = docker.io
CI_REGISTRY_IMAGE= index.docker.io/gopal1409/chatapp
CI_REGISTRY_PASSWORD = gopal1409
CI_REGISTRY_USER = pass


