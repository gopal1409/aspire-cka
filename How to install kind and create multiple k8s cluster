##update the system
sudo -i
apt-get update
apt install docker.io
# For AMD64 / x86_64
[ $(uname -m) = x86_64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64

chmod +x ./kind
sudo mv ./kind /usr/local/bin/kind

###lets create the k8s cluster as kind
kind create cluster --name project-nasa
####lets create the second cluster
kind create cluster --name project-jpl

###finally install kubectl
sudo apt-get install -y apt-transport-https ca-certificates curl
sudo mkdir -m 755 /etc/apt/keyrings
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-get install -y kubectl
####check the k8s cluster
kubectl get nodes
###to check all the kind cluster
kind get clusters

###multi node cluster
vi multicluster.yml
###################
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
- role: worker
- role: worker
#####run this using kind
kind create cluster --config multicluster.yml

####how to verify the kubernetes cluster configuration
 41  cd /root/.kube/
   42  ls
   43  cat config
###how to switch once cluste to antoher using kubectl config context
 52  kubectl config get-contexts
   53  kubectl config set-context kind-project-jpl
   54  kubectl config get-contexts
   55  kubectl get nodes
kubectl config use-context nameofthecluster
