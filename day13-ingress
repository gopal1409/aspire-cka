##3lets deploy the ingress controller
 627  kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.6.4/deploy/static/provider/cloud/deploy.yaml
  628  kubectl get ns
  629  kubectl get pods --namespace=ingress-nginx
    ####the below command will give you the port number of nginx in gress controller. copy the second machine ip : port number you will see the ingress test page. 
  630  kubectl get svc -A
####delete the validation web hook as we dont have the ssl certificate we have it but unsigned
       665  kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission
###3lets deploy two pod one is nginx one is httpd
 637  kubectl run pod1 --image=nginx
  638  kubectl run pod2 --image=httpd

##3lets expose the app internal to your k8s cluster

 643  kubectl expose pod pod1 --port 80 --name service1
  644  kubectl expose pod pod2 --port 80 --name service2
###verify the same bothe the service is being exposed internally to your k8s cluster using cluster ip
kubectl get svc -A
###lets verify the service mappign with pod ip
  662  kubectl get pod -o wide
  663  kubectl get svc
  664  kubectl describe svc service1
  665  kubectl describe svc service2
###lets create the ingress manifest
###vi ingress.yml ###inside this copy from line 26 till 51
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minimal-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /service1
        pathType: Prefix
        backend:
          service:
            name: service1
            port:
              number: 80
      - path: /service2
        pathType: Prefix
        backend:
          service:
            name: service2
            port:
              number: 80
#####save the file and apply it
 674  kubectl apply -f ingress.yml
####below command will verify the ingress
  675  kubectl get ingress
###describe ingress will show you that it is mapped to both of your pod service
  676  kubectl describe ingress minimal-ingress
  677  kubectl get pod -o wide


